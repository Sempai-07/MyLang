enum TokenType {
  EndOf = "EndOf",
  String = "String",
  Int = "Int",
  Float = "Float",
  Bool = "Bool",
  Nil = "Nil",
  Keyword = "Keyword",
  Identifier = "Identifier",
  OperatorAdd = "OperatorAdd",
  OperatorPlusPlus = "OperatorPlusPlus",
  OperatorSubtract = "OperatorSubtract",
  OperatorMinusMinus = "OperatorMinusMinus",
  OperatorMultiply = "OperatorMultiply",
  OperatorDivide = "OperatorDivide",
  OperatorModulo = "OperatorModulo",
  OperatorAssign = "OperatorAssign",
  OperatorAssignMinus = "OperatorAssignMinus",
  OperatorAssignPlus = "OperatorAssignPlus",
  OperatorEqual = "OperatorEqual",
  OperatorNotEqual = "OperatorNotEqual",
  OperatorGreaterThan = "OperatorGreaterThan",
  OperatorLessThan = "OperatorLessThan",
  OperatorGreaterThanOrEqual = "OperatorGreaterThanOrEqual",
  OperatorLessThanOrEqual = "OperatorLessThanOrEqual",
  OperatorLogicalAnd = "LogicalAnd",
  OperatorAnd = "OperatorAnd",
  OperatorLogicalOr = "LogicalOr",
  OperatorOr = "OperatorOr",
  QuestionMark = "QuestionMark",
  OperatorNot = "OperatorNot",
  BraceOpen = "BraceOpen",
  BraceClose = "BraceClose",
  BracketOpen = "BracketOpen",
  BracketClose = "BracketClose",
  ParenthesisOpen = "ParenthesisOpen",
  ParenthesisClose = "ParenthesisClose",
  Comma = "Comma",
  Period = "Period",
  QuoteDouble = "QuoteDouble",
  QuoteSingle = "QuoteSingle",
  Semicolon = "Semicolon",
  Colon = "Colon",
}

enum TokenList {
  BraceOpen = "{",
  BraceClose = "}",
  BracketOpen = "[",
  BracketClose = "]",
  ParenthesisOpen = "(",
  ParenthesisClose = ")",
  Comma = ",",
  Period = ".",
  QuoteDouble = '"',
  QuoteSingle = "'",
  Semicolon = ";",
  Colon = ":",
}

enum OperatorType {
  Add = "+",
  PlusPlus = "++",
  Subtract = "-",
  MinusMinus = "--",
  Multiply = "*",
  Divide = "/",
  Modulo = "%",
  Assign = "=",
  AssignMinus = "-=",
  AssignPlus = "+=",
  Equal = "==",
  NotEqual = "!=",
  GreaterThan = ">",
  LessThan = "<",
  GreaterThanOrEqual = ">=",
  LessThanOrEqual = "<=",
  LogicalAnd = "&",
  And = "&&",
  LogicalOr = "|",
  QuestionMark = "?",
  Or = "||",
  Not = "!",
}

enum KeywordType {
  Var = "var",
  As = "as",
  Const = "const",
  Readonly = "readonly",
  Func = "func",
  Return = "return",
  Import = "import",
  Export = "export",
  If = "if",
  Else = "else",
  For = "for",
  In = "in",
  While = "while",
  Break = "break",
  Continue = "continue",
  Try = "try",
  Catch = "catch",
  Finally = "finally",
  Await = "await",
  Async = "async",
  Enum = "enum",
  Throw = "throw",
  Match = "match",
  Case = "case",
  Default = "default",
  Defer = "defer",
}

export { TokenList, TokenType, OperatorType, KeywordType };
